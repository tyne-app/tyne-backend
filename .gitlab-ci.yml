image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay

stages:
  - build-heroku
  - deploy-heroku
  
job-build-heroku:
  stage: build-heroku
  artifacts:
    paths: 
      - imageid.txt
  before_script:
    - echo "Start Docker Image Build"   
  script:
    - docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/api-locals-tyne .
    - docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
    - docker push registry.heroku.com/api-locals-tyne
  after_script:
    - ls -l imageid.txt
    - cat imageid.txt
    - echo "Complete Docker Image Build"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME=="develop"'
      allow_failure: false

job-deploy-heroku:
  stage: deploy-heroku
  needs: [job-build-heroku]
  before_script:
    - echo "Start Deploy Heroku"
    - ls -l imageid.txt
  script:
    - apk add --no-cache curl
    - echo "Docker Image ID is $(cat imageid.txt)"
    - |-
      curl -X PATCH https://api.heroku.com/apps/api-locals-tyne/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer $HEROKU_API_KEY" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  after_script:
    - echo "Complete Deploy Heroku"
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME=="develop"'
      when: on_success
      allow_failure: false

